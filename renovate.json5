{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "baseBranches": ["main", "renovate-is-hard"],
  "extends": [
    // pull creds for registry1 from uds-common
    // "github>defenseunicorns/uds-common//config/renovate.json5:hostRules",
    "github>defenseunicorns/narwhal-delivery-renovate-config/zarfPackageGenericMatching.json5",
    // Tells Renovate to maintain one GitHub issue as the "dependency dashboard". See https://docs.renovatebot.com/key-concepts/dashboard
    ":dependencyDashboard",
    // Use semantic commit type fix for dependencies and chore for all others if semantic commits are in use. See https://docs.renovatebot.com/presets-default/#semanticprefixfixdepschoreothers
    ":semanticPrefixFixDepsChoreOthers",
    // Group all updates together. See https://docs.renovatebot.com/presets-group/#groupall
    // Other less drastic groupings that may be of interest include: group:allNonMajor, group:recommended, group:monorepos
    // "group:all",
    // Apply crowd-sourced package replacement rules. See https://docs.renovatebot.com/presets-replacements/#replacementsall
    "replacements:all",
    // Apply crowd-sourced workarounds for known problems with packages. See https://docs.renovatebot.com/presets-workarounds/#workaroundsall
    "workarounds:all"
  ],
  // If we don't specify a timezone then Renovate will use UTC
  "timezone": "America/New_York",
  // fires between 4 am and 5 am EST on mondays
  "schedule": ["after 4am and before 11am on Monday"],
  // Using a value of "conflicted" means that Renovate will only rebase PRs if they are in a conflicted state. See https://docs.renovatebot.com/configuration-options/#rebasewhen
  "rebaseWhen": "auto",
  // Labels to set in Pull Request. See https://docs.renovatebot.com/configuration-options/#labels
  "labels": ["renovate"],
  // Rate limit PRs to maximum x created per hour. 0 means no limit. See https://docs.renovatebot.com/configuration-options/#prhourlylimit
  "prHourlyLimit": 1,
  // Limit to a maximum of x concurrent branches/PRs. 0 means no limit. See https://docs.renovatebot.com/configuration-options/#prconcurrentlimit
  "prConcurrentLimit": 1,
  // Enable updates to the pre-commit-config.yaml file. See https://docs.renovatebot.com/modules/manager/pre-commit/
  "pre-commit": {
    "enabled": true
  },
  // "regexManagers": [
  //   // Custom regex manager for the .env file that follows the pattern documented here: https://docs.renovatebot.com/modules/manager/regex/#advanced-capture
  //   {
  //     "fileMatch": ["^.env"],
  //     "matchStrings": [
  //       "datasource=(?<datasource>.*?) depName=(?<depName>.*?)( versioning=(?<versioning>.*?))?\\s.*?_VERSION=(?<currentValue>.*)\\s"
  //     ],
  //     "versioningTemplate": "{{#if versioning}}{{{versioning}}}{{else}}semver-coerced{{/if}}",
  //     "extractVersionTemplate": "^v?(?<version>.*)$"
  //   },
  //   {
  //     "fileMatch": ["zarf-config(-.+)?\\.ya?ml$"],
  //     "matchStrings": [
  //       "datasource=(?<datasource>.*?) depName=(?<depName>.*?)( versioning=(?<versioning>.*?))?\\s.*image_version: (?<currentValue>.*)\\s"
  //     ],
  //     "versioningTemplate": "{{#if versioning}}{{{versioning}}}{{else}}loose{{/if}}"
  //   },
  //   {
  //     "fileMatch": ["zarf-config(-.+)?\\.ya?ml$"],
  //     "matchStrings": [
  //       "datasource=(?<datasource>.*?) depName=(?<depName>.*?)( registryUrl=(?<registryUrl>.*?))?( versioning=(?<versioning>.*?))?\\s.*chart_version: (?<currentValue>.*)\\s"
  //     ],
  //     "versioningTemplate": "{{#if versioning}}{{{versioning}}}{{else}}loose{{/if}}",
  //     "registryUrlTemplate": "{{#if registryUrl}}{{{registryUrl}}}{{else}}{{/if}}"
  //   }
  // ],
  "hostRules": [
    {
      "matchHost": "registry1.dso.mil",
      "hostType": "docker",
      "description": "Encrypted creds for registry1, scoped to this Github org using: https://github.com/renovatebot/renovate/blob/main/docs/usage/configuration-options.md#encrypted",
      "encrypted": {
        "username": "wcFMA/xDdHCJBTolAQ/+Jzirk3km1z5Qu/PhK7LI2TeyY428uWO8/LXhQXu9xzksFccxfUoGgs/KZjuXK44QgnYJaQQSTYZFsEbX2kOdIB6O/uqV5ep3g/sd+N/SSB1Jr7+LR8+DnNhYMcS5UVIoFkVVz/bVTyszZaoowsKbEKb6Lu/V1MoYHmGnc8aHUMXFSFkVsdc2KVczcGluN5QIfPsGpQf+bkYzkxBlvUZfex2BiS0qufXt4rNuTteT+5g6ggL7tnsL9cmSHnayU0Cj+6mhNVpau58xBwucjwXYvpuHXVGa2Mq+VhP4AvB+z10EbIwTGym6hMY5y5VZc5A3KlM7fmfi74MyYXMADR/2Y+Cf0ctGUhBow/iNWnZkjwh9QAtwwHTofCxI4c5YOnVS+XuByAR4BNLlB0InQ+Xsut36vVuBWlLZfVaOWQMj52cbK0BbF1UmSHtiGnlnFAyLfoPxtXngCMh2XDSXcWiC5UV1VGTKYF+Viqqz5SQ+sNPXMmUOJls3zloajY9SpWxthDW+e4QA3ptNYrqCW4QYGzcppgJaMfu2v3Yioe0q6ObbJZ4bF9cV8IFy3VA5wB/6KGhDBlkgYzTB2BmSJfuZsr/afYDiRad4ey9lMJSzXr9TonHZBpD3dx9cCOCpoYxVTlkkCDnDWz5t8Jp58dZbQEK5QfcEo4IuieBMBLE+u6rSYgEC2dSKobhweQGQpCKewVcUyk7quZeOxDTqdYZkBoAnhqhGCPbPXB3Vv2IOW0Yuh6P39kJi3a0T6jcfran/f/vtP4dz2ccNCxzJPX5VV48RyuXN/Q9Si8euLTjy0D5015SU",
        "password": "wcFMA/xDdHCJBTolARAAhMVJyh7vR2F01CshGBdgq7IwQQvjK8sqnLdtRWNpKdeGAjWC3WFHXengwznRu1Ht5belOLooaU+aJAWtq+1GV/y1B1Z/qB34EZUASD7HFwb8EVm/BX2Pgg+LRzVQMiihsFQxmM71tVfkVvYArzNYQG+HAjQOhU/xJDCEHaBgqZI6wMgRHnxfSTbFMBn7IW0nt6h+cnUwPthwDhoZ98/o0GKfWhLG33WV6kMJycJmU2D3xKj6IWs0ckOIn7UtxCu423i4T0bTYvmV63o/UE7CkoKr5L0zWt6UozYgxxXPVP13Eq5SCRkQcg5/+pifO/uHMkwOKzN8mlqoNVxqO/vGqVQt39N15ioVd3AkwleykuuuCxqcoPq7JrPQEN9QApWzqMQQkcGtAf682BK8mHRWDm0Z3++ft1f+Q4z9spKSsM72G/CKbzqCksU1cvvjVkizMnpWzWsjN4+DggU7eJRX7lclh2O05A8LtbvddSJyzjjGgTzlfnL5B0sxbBj3dKVH59bK+yc+0xh/DaaHvghAWTiEPpunsEuNIuKCZ3onMIk5/rDxnvdQgC4yBY8Czi6mSq8Av1ELuJw5OBTa5BviCV6T7h7XMvWV8kT1r7PWHHt9g1XMjGs1+WdO/RfNYdc8+vIwxlu6+M3v/gMWrY93nSaRAm+Hc+hrlEoK1XADJ5PScwHgsLka28sttqh1a3MGS5hVV9nSL46XjrpYFzcvtoXn+yuF/EsY6nlLiqydOSWA1wei2PsOdIDBZalUvotlUTqXk5H6a7qdlDgkTqQv6YMwEE47xTKfM2h1L1v5R3wZXwM+OQ1amt17hj2DuhpfTT5nn2E"
      }
    }
  ],
  "forkProcessing": "enabled",
  "packageRules": [
    {
      "matchPackageNames": ["k8s.io/client-go"],
      "allowedVersions": "<1.0.0"
    },
    {
      "matchManagers": ["terraform"],
      "matchDepTypes": ["module"],
      "matchDatasources": ["github-tags", "git-tags"],
      "versioning": "loose"
    }
  ],
  "vulnerabilityAlerts": {
    "enabled": true,
    "groupName": "Security Updates",
    "schedule": [],
    "dependencyDashboardApproval": false,
    "minimumReleaseAge": null,
    "rangeStrategy": "update-lockfile",
    "commitMessageSuffix": "[SECURITY]",
    "branchTopic": "{{{datasource}}}-{{{depName}}}-vulnerability",
    "prCreation": "immediate",
    "labels": ["security"],
    "automerge": true,
    "assignees": ["@defenseunicorns/delivery-aws-iac"]
  },
  "osvVulnerabilityAlerts": true
}
